from poly_llm.to_test.find_closest_elements import find_closest_elements
import pytest

TESTS = [
    ([], ValueError),
    ([1], ValueError),
    ([1, 2], (1, 2)),
    ([1, 2, 3], (2, 3)),
    ([1, 2, 3, 4], (2, 3)),
    ([1, 2, 3, 4, 5], (3, 4)),
    ([1, 2, 3, 4, 5, 6], (4, 5)),
    ([1, 2, 3, 4, 5, 6, 7], (4, 5)),
    ([1, 2, 3, 4, 5, 6, 7, 8], (5, 6)),
    ([1, 2, 3, 4, 5, 6, 7, 8, 9], (6, 7)),
    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], (7, 8)),
    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], (8, 9)),
    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], (9, 10)),
    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], (10, 11)),
    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], (11, 12)),
    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], (12, 13)),
    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], (13, 14)),
    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], (14, 15)),
    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], (15, 16)),
    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], (16, 17)),
    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], (17, 18)),
]

@pytest.mark.parametrize("numbers,expected", TESTS)
def test_find_closest_elements(numbers, expected):
    try:
      actual = find_closest_elements(numbers)
      assert actual == expected
    except Exception as e:
       print(str(e))
       raise AssertionError(f"Expected {expected}, but got error.")

if __name__ == "__main__":
    pytest.main(['-v'])

